package njusoftware.noComment.SamurAI.base;

public abstract class ConstVar {
	// 用于推测位置的参数
	public final static int NEW_CAPTURE_POW = 2, // 新增占领区位置权重
			NEW_SURR_POW = 3, // 新增占领区周围权重
			PREV_POS_POW = 2, // 先前位置权重
			POS_SURR_POW = 5; // 先前位置周围的权重
	// 用于遍历周围格子的数组
	public final static int[][] SURROUNDINGS = new int[][] { { -1, -1 }, { -1, 0 }, { -1, 1 }, { 0, 1 }, { 1, 1 },
			{ 1, 0 }, { 1, -1 }, { 0, -1 } };
	// 移动范围
	public final static int[][] MOVE_RANGE = { { 1, 0 }, { 2, 0 }, { 3, 0 }, { 0, 1 }, { 1, 1 }, { 2, 1 }, { 0, 2 },
			{ 1, 2 }, { 0, 3 }, { -1, 0 }, { -2, 0 }, { -3, 0 }, { -1, 1 }, { -2, 1 }, { -1, 2 }, { 0, -1 }, { 0, -2 },
			{ 0, -3 }, { 1, -1 }, { 1, -2 }, { 2, -1 }, { -1, -1 }, { -2, -1 }, { -1, -2 }, }, // 只移动的范围
			OCCUPIED_MOVE_RANGE = new int[][] { { 0, -1 }, { 1, 0 }, { 0, 1 }, { -1, 0 } };// 进行占据时的移动范围
	// 分成四块的移动范围
	public final static int[][][] SEPERATED_MOVE_RANGE = { // 注意坐标轴方向
			{ { 1, 0 }, { 2, 0 }, { 3, 0 }, { 0, 1 }, { 1, 1 }, { 2, 1 }, { 0, 2 }, { 1, 2 }, { 0, 3 } }, // 第一象限,0
			{ { -1, 0 }, { -2, 0 }, { -3, 0 }, { -1, 1 }, { -2, 1 }, { -1, 2 } }, // 第二象限,1
			{ { 0, -1 }, { 0, -2 }, { 0, -3 }, { 1, -1 }, { 1, -2 }, { 2, -1 } }, // 第四象限,2
			{ { -1, -1 }, { -2, -1 }, { -1, -2 } }, };// 第三象限,3
}
